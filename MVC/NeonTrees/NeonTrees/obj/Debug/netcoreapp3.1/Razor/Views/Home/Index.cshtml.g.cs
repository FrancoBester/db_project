#pragma checksum "C:\Coding\CMPG 321\Backup\db_project\MVC\NeonTrees\NeonTrees\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e030ede524c1c221e8ee4f70b056c55a0518c9f4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Coding\CMPG 321\Backup\db_project\MVC\NeonTrees\NeonTrees\Views\_ViewImports.cshtml"
using NeonTrees;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Coding\CMPG 321\Backup\db_project\MVC\NeonTrees\NeonTrees\Views\_ViewImports.cshtml"
using NeonTrees.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e030ede524c1c221e8ee4f70b056c55a0518c9f4", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a233dd4d465801631d196157b503be1fcdde2ed7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Coding\CMPG 321\Backup\db_project\MVC\NeonTrees\NeonTrees\Views\Home\Index.cshtml"
   ViewData["Title"] = "Home Page"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>
<button id=""clicker"" onclick=""ChartPartType();"">Authors</button>
<div onload=""PopulateScreen();"" style=""margin:1px"">
    <canvas id=""chartContainer""></canvas>
</div>
<hr />


<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
<script type=""text/javascript"">

    const url = 'https://nameless-forest-23875.herokuapp.com/RawProduct/';
    fetch(url, {
        method: 'GET', // *GET, POST, PUT, DELETE, etc.
        mode: 'cors', // no-cors, *cors, same-origin
        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
        credentials: 'same-origin', // include, *same-origin, omit
        headers: {
            'Content-Type': 'application/json'
            // 'Content-Type': 'application/x-www-form-urlencoded',
        },
        // redirect: 'follow', // manual, ");
            WriteLiteral(@"*follow, error
        referrerPolicy: 'origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
    })
        .then((response) => {
            return response.json()

        })
        .then((data) => {

            [
                {
                    ""$group"": {
                        ""_id"": {
                            ""__alias_0"": ""$PartType""
                        },
                        ""__alias_1"": {
                            ""$sum"": {
                                ""$cond"": [
                                    {
                                        ""$ne"": [
                                            {
                                                ""$type"": ""$PartType""
                                            },
                                            ""missing""
                                        ]
                                    },
               ");
            WriteLiteral(@"                     1,
                                    0
                                ]
                            }
                        }
                    }
                },
                {
                    ""$project"": {
                        ""_id"": 0,
                        ""__alias_0"": ""$_id.__alias_0"",
                        ""__alias_1"": 1
                    }
                },
                {
                    ""$project"": {
                        ""x"": ""$__alias_1"",
                        ""color"": ""$__alias_0"",
                        ""_id"": 0
                    }
                },
                {
                    ""$limit"": 5000
                }
            ]
        })
        .catch((err) => {
            // Do something for an error here
            console.log(err.message);
        });

    




    /*
    var arrStuff = [];
    var obj = [];
    getFile();
    let bflag = false;

    var name = """";
    var description = """";
    var In");
            WriteLiteral(@"ventoryValue = """";
    var PartType = """";
    var url = """";

    var cout = 0;

    var ChartData;


   

    var flag = false
    function populate(name, description, InventoryValue, Parttype, url) {
        try {
            //document.getElementById('X').value = x;
           //document.getElementById('name').value = name;
            //document.getElementById('description').value = description;
            //document.getElementById('InventoryValue').value = InventoryValue;
            //document.getElementById('PartType').value = Parttype;
            //document.getElementById('url').value = url;

            
            


            //arrStuff = new Product(name, description, InventoryValue, Parttype, url);
            //alert(JSON.stringify(arrStuff));

            //name = JSON.stringify();

            //alert(name + description + InventoryValue + Parttype + url );;
            //
            //window.setTimeout(function () { document.getElementById(""saveIt"").click(); }, 2000);
            //$.post");
            WriteLiteral(@"('/Product/Creater', { name, description, InventoryValue, Parttype, url });
            //  asp - action=""Creater"" style = ""background-color:  #adbec5""
            //  document.myform.action=""Submit"";



 



            //PIE
            ctx = document.getElementById('pieContainer').getContext('2d');
            var dataPie = {
                datasets: [{
                    data: repArrD, hoverBackgroundColor: '#E91E63'
                }],

                // These labels appear in the legend and in the tooltips when hovering different arcs
                labels: departments
            };

            var pieChart = new Chart(ctx, {
                type: 'pie',
                labels: departments,
                data: dataPie,
                options: {
                    title: {
                        display: true,
                        text: 'Role distribution'
                    },
                    responsive: true
                }
            });


        } catch (err) { alert(err.messag");
            WriteLiteral(@"e) }
    }


    function Product(fname, des, val, parttypes, url) {
        this.name = fname;
        this.description = des;
        this.InventoryValue = val;
        this.PartType = parttypes;
        this.url = url;
    };

    var dataMem;
    //function getFile() {
        populate('', '', '', '', '');
        const url = 'https://nameless-forest-23875.herokuapp.com/RawProduct/';
        fetch(url, {
            method: 'GET', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, *cors, same-origin
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, *same-origin, omit
            headers: {
                'Content-Type': 'application/json'
                // 'Content-Type': 'application/x-www-form-urlencoded',
            },
            // redirect: 'follow', // manual, *follow, error
            referrerPolicy: 'origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-ori");
            WriteLiteral(@"gin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        })
            .then((response) => {
                return response.json()

            })
            .then((data) => {

                dataMem = data;

                PopulateScreen();
            })
            .catch((err) => {
                // Do something for an error here
                console.log(err.message);
            });
    };
    var x = 0;
    function PopulateScreen() {
        try {
            if (x < dataMem.length) {

                window.setTimeout(function () {
                    flag = true;
                    populate(dataMem[x].name, dataMem[x].description, dataMem[x].InventoryValue, dataMem[x].PartType, dataMem[x].url);
                    PopulateScreen();
                    arrStuff.push(dataMem[x].PartType)
                }, 3000);

            } else {
                alert(""x has run out"");
            }

        } catch (e) { alert(e) }
    }


    function ChartPartType() {
     ");
            WriteLiteral(@"   var myChart = new Chart(ctx, {
            type: 'line',
            data: arrStuff,
            options: {
                title: {
                    display: true,
                    text: 'Sum of employees per department'
                }
            }
        });
    }

    


    */

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
